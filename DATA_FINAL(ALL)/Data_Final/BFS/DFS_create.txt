package BFS;

import java.util.Scanner;
import java.util.Stack;

public class Create_DFS {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("Enter number of vertex");
        int vertex = input.nextInt();
        System.out.println("Enter number of edges");
        int edges = input.nextInt();
        int[][] graph = new int[100][100];
        int[] visited = new int[vertex];
        for (int i=0; i<vertex;i++)
        {
            visited[i] = 0;
        }
        for (int i=0;i<vertex;i++)
        {
            for (int j=0;j<vertex;j++)
            {
                graph[i][j] =0;
            }
        }
        for (int i=0;i<edges;i++)
        {
            int n1 = input.nextInt();
            int n2 = input.nextInt();
            graph[n1][n2] = 1;
            graph[n2][n1] =1;
        }
        Stack<Integer> stack = new Stack<>();
        stack.push(0);
        visited[0] = 1;
        while (!stack.isEmpty())
        {
            int print = stack.peek();
            System.out.print(print+" ");
            stack.pop();
            for (int i=0;i<vertex;i++)
            {
                if ((graph[print][i]==1) && (visited[i]==0))
                {
                    visited[i] = 1;
                    stack.push(i);
                }
            }
        }
    }
}
